#!/bin/bash
#
# Submit sms job script to loadleveler.
#
# Usage:
# 	slsubmit6 %ECF_JOB% %ECF_NAME% %ECF_TRIES% %ECF_TRYNO% %ECF_HOST% %ECF_PORT%
#
# NOTE:
#	Variable WORKDIR must be set in the shell environment.
#
# Version:
# 	v1.0 2018.03.30

usage() {
  echo "Submit ecflow job script to slurm."
  echo "Usage: slsubmit6 %ECF_JOB% %ECF_NAME% %ECF_TRIES% %ECF_TRYNO% %ECF_HOST% %ECF_PORT%"
}

err() {
  echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]: $@"
}

submit_log() {
	if [[ "$SUBMIT_LOG" = "true" ]]; then
		echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]$@" >> ${submit_log_path}
	fi
}

debug() {
	if [[ "$DEBUG" = "true" ]]; then
		echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]$@" >> ${debug_log_path}
	fi
}

error_log() {
	if [[ "$ERROR_LOG" = "true" ]]; then
		echo "[$(date +'%Y-%m-%dT%H:%M:%S%z')]$@" >> ${error_log_path}
	fi
}

# for test use
export DEBUG=false
export SUBMIT_LOG=true
export ERROR_LOG=true

export log_dir=$WORKDIR/sublog

export submit_log_path=${log_dir}/slsubmit6.submit.log
export debug_log_path=${log_dir}/slsubmit6.debug.log
export error_log_path=${log_dir}/slsubmit6.error.log

test -d ${log_dir} ||mkdir -p ${log_dir}

if [[ $# -ne 6 ]]
then
  err "error params"
  usage
  exit 1
fi

set -u
set -x

job_name=
task_name=
ecf_tries=
ecf_try_no=
job_out=

job_name=$1
task_name=$2
ecf_tries=$3
ecf_try_no=$4
ecf_host=$5
ecf_port=$6


if [[ ! -n "${job_out}" ]]
then
	job_out=$( echo ${job_name} | sed 's/job\([0-9]*\)$/\1/g' )
fi
job_err_output_file=${job_out}.err

debug "${job_name} ${task_name} ${ecf_tries} ${ecf_try_no}"

# PI doesn't need wait for a random time
# /usr/bin/python <<EOF
# import random,time
# no=${ecf_try_no}
# if no<=1:
#     min_second=0
#     max_second=5
# elif no==2:
#     min_second=10
#     max_second=20
# else:
#     min_second=30
#     max_second=60
# random_seconds=random.uniform(min_second,max_second)
# print random_seconds
# time.sleep(random_seconds)
# EOF

# PI doesn't need to test if job file exists.
# if [ ! -f ${job_name}.asdf ]; then
#     sleep 5
#     if [ ! -f ${job_name}.asdf ]; then
#         cat > ${job_err_output_file} <<EOF
# [$(date +"%Y-%m-%d %H:%M:%S")] Job file does not exist.
# EOF
#         ecflow_client --host=${ecf_host} --port=${ecf_port} \
#               --force=aborted ${task_name}
#         exit
#     fi
# fi

submit_log "sbatch $job_name"
submit_output=$(sbatch ${job_name} 2>>${submit_log_path})
# submit_output=$(sbatch asdfasdfasdf 2>>${submit_log_path})

rid=$(echo ${submit_output} | cut -d ' ' -f 4)

if [ -n "$rid" ]; then
	debug "sbatch success: ${task_name}"
	ecflow_client --host=${ecf_host} --port=${ecf_port} \
        --alter add variable ECF_RID ${rid} ${task_name}
else
	debug "submit failed ${task_name} at TRYNO ${ecf_try_no}"
	if [[ ${ecf_try_no} -ge ${ecf_tries} ]]; then
		debug "abort ${task_name} after ${ecf_tries} tries"
		cat > ${job_err_output_file} <<EOF
[$(date +"%Y-%m-%d %H:%M:%S")] Failed to submit job to Slurm after ${ecf_tries} tries.
EOF
		error_log "[slsubmit6]submit failed: $@"
		ecflow_client --host=${ecf_host} --port=${ecf_port} \
            --force=aborted ${task_name}
	else
		debug "rerun ${task_name} after TRYNO ${ecf_try_no}"
		cat > ${job_err_output_file} <<EOF
[$(date +"%Y-%m-%d %H:%M:%S")] Failed to submit job to Slurm at tryno ${ecf_try_no}.
EOF
		error_log "[slsubmit6]submit failed: $@"
		ecflow_client --host=${ecf_host} --port=${ecf_port} \
            --run force ${task_name}
	fi
fi
